/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openapi.client;

import com.openapi.client.model.ChatCompletionDeleted;
import com.openapi.client.model.ChatCompletionList;
import com.openapi.client.model.ChatCompletionMessageList;
import com.openapi.client.model.CompletionsCompletionIdBody;
import com.openapi.client.model.CreateChatCompletionRequest;
import com.openapi.client.model.CreateChatCompletionResponse;
import com.openapi.client.model.Metadata;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChatApi
 */
@Ignore
public class ChatApiTest {

    private final ChatApi api = new ChatApi();

    /**
     * **Starting a new project?** We recommend trying [Responses](/docs/api-reference/responses)  to take advantage of the latest OpenAI platform features. Compare [Chat Completions with Responses](/docs/guides/responses-vs-chat-completions?api-mode&#x3D;responses).  ---  Creates a model response for the given chat conversation. Learn more in the [text generation](/docs/guides/text-generation), [vision](/docs/guides/vision), and [audio](/docs/guides/audio) guides.  Parameter support can differ depending on the model used to generate the response, particularly for newer reasoning models. Parameters that are only supported for reasoning models are noted below. For the current state of  unsupported parameters in reasoning models,  [refer to the reasoning guide](/docs/guides/reasoning). 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createChatCompletionTest() {
        CreateChatCompletionRequest body = null;
        CreateChatCompletionResponse response = api.createChatCompletion(body);

        // TODO: test validations
    }
    /**
     * Delete a stored chat completion. Only Chat Completions that have been created with the &#x60;store&#x60; parameter set to &#x60;true&#x60; can be deleted. 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteChatCompletionTest() {
        String completionId = null;
        ChatCompletionDeleted response = api.deleteChatCompletion(completionId);

        // TODO: test validations
    }
    /**
     * Get a stored chat completion. Only Chat Completions that have been created with the &#x60;store&#x60; parameter set to &#x60;true&#x60; will be returned. 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChatCompletionTest() {
        String completionId = null;
        CreateChatCompletionResponse response = api.getChatCompletion(completionId);

        // TODO: test validations
    }
    /**
     * Get the messages in a stored chat completion. Only Chat Completions that have been created with the &#x60;store&#x60; parameter set to &#x60;true&#x60; will be returned. 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChatCompletionMessagesTest() {
        String completionId = null;
        String after = null;
        Integer limit = null;
        String order = null;
        ChatCompletionMessageList response = api.getChatCompletionMessages(completionId, after, limit, order);

        // TODO: test validations
    }
    /**
     * List stored Chat Completions. Only Chat Completions that have been stored with the &#x60;store&#x60; parameter set to &#x60;true&#x60; will be returned. 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listChatCompletionsTest() {
        String model = null;
        Metadata metadata = null;
        String after = null;
        Integer limit = null;
        String order = null;
        ChatCompletionList response = api.listChatCompletions(model, metadata, after, limit, order);

        // TODO: test validations
    }
    /**
     * Modify a stored chat completion. Only Chat Completions that have been created with the &#x60;store&#x60; parameter set to &#x60;true&#x60; can be modified. Currently, the only supported modification is to update the &#x60;metadata&#x60; field. 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateChatCompletionTest() {
        CompletionsCompletionIdBody body = null;
        String completionId = null;
        CreateChatCompletionResponse response = api.updateChatCompletion(body, completionId);

        // TODO: test validations
    }
}
