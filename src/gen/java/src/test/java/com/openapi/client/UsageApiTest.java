/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openapi.client;

import com.openapi.client.model.UsageResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsageApi
 */
@Ignore
public class UsageApiTest {

    private final UsageApi api = new UsageApi();

    /**
     * Get audio speeches usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageAudioSpeechesTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> userIds = null;
        List<String> apiKeyIds = null;
        List<String> models = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageAudioSpeeches(startTime, endTime, bucketWidth, projectIds, userIds, apiKeyIds, models, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get audio transcriptions usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageAudioTranscriptionsTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> userIds = null;
        List<String> apiKeyIds = null;
        List<String> models = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageAudioTranscriptions(startTime, endTime, bucketWidth, projectIds, userIds, apiKeyIds, models, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get code interpreter sessions usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageCodeInterpreterSessionsTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageCodeInterpreterSessions(startTime, endTime, bucketWidth, projectIds, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get completions usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageCompletionsTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> userIds = null;
        List<String> apiKeyIds = null;
        List<String> models = null;
        Boolean batch = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageCompletions(startTime, endTime, bucketWidth, projectIds, userIds, apiKeyIds, models, batch, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get costs details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageCostsTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageCosts(startTime, endTime, bucketWidth, projectIds, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get embeddings usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageEmbeddingsTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> userIds = null;
        List<String> apiKeyIds = null;
        List<String> models = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageEmbeddings(startTime, endTime, bucketWidth, projectIds, userIds, apiKeyIds, models, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get images usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageImagesTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> sources = null;
        List<String> sizes = null;
        List<String> projectIds = null;
        List<String> userIds = null;
        List<String> apiKeyIds = null;
        List<String> models = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageImages(startTime, endTime, bucketWidth, sources, sizes, projectIds, userIds, apiKeyIds, models, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get moderations usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageModerationsTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> userIds = null;
        List<String> apiKeyIds = null;
        List<String> models = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageModerations(startTime, endTime, bucketWidth, projectIds, userIds, apiKeyIds, models, groupBy, limit, page);

        // TODO: test validations
    }
    /**
     * Get vector stores usage details for the organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usageVectorStoresTest() {
        Integer startTime = null;
        Integer endTime = null;
        String bucketWidth = null;
        List<String> projectIds = null;
        List<String> groupBy = null;
        Integer limit = null;
        String page = null;
        UsageResponse response = api.usageVectorStores(startTime, endTime, bucketWidth, projectIds, groupBy, limit, page);

        // TODO: test validations
    }
}
