/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openapi.client.model;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
/**
* ResponseStreamEvent
*/
@JsonTypeInfo(
  use = JsonTypeInfo.Id.NAME,
  include = JsonTypeInfo.As.PROPERTY,
  property = "type")
@JsonSubTypes({
  @JsonSubTypes.Type(value = ResponseAudioDeltaEvent.class, name = "response.audio.delta"),
  @JsonSubTypes.Type(value = ResponseAudioDoneEvent.class, name = "response.audio.done"),
  @JsonSubTypes.Type(value = ResponseAudioTranscriptDeltaEvent.class, name = "response.audio.transcript.delta"),
  @JsonSubTypes.Type(value = ResponseAudioTranscriptDoneEvent.class, name = "response.audio.transcript.done"),
  @JsonSubTypes.Type(value = ResponseCodeInterpreterCallCodeDeltaEvent.class, name = "response.code_interpreter_call.code.delta"),
  @JsonSubTypes.Type(value = ResponseCodeInterpreterCallCodeDoneEvent.class, name = "response.code_interpreter_call.code.done"),
  @JsonSubTypes.Type(value = ResponseCodeInterpreterCallCompletedEvent.class, name = "response.code_interpreter_call.completed"),
  @JsonSubTypes.Type(value = ResponseCodeInterpreterCallInProgressEvent.class, name = "response.code_interpreter_call.in_progress"),
  @JsonSubTypes.Type(value = ResponseCodeInterpreterCallInterpretingEvent.class, name = "response.code_interpreter_call.interpreting"),
  @JsonSubTypes.Type(value = ResponseCompletedEvent.class, name = "response.completed"),
  @JsonSubTypes.Type(value = ResponseContentPartAddedEvent.class, name = "response.content_part.added"),
  @JsonSubTypes.Type(value = ResponseContentPartDoneEvent.class, name = "response.content_part.done"),
  @JsonSubTypes.Type(value = ResponseCreatedEvent.class, name = "response.created"),
  @JsonSubTypes.Type(value = ResponseErrorEvent.class, name = "error"),
  @JsonSubTypes.Type(value = ResponseFileSearchCallCompletedEvent.class, name = "response.file_search_call.completed"),
  @JsonSubTypes.Type(value = ResponseFileSearchCallInProgressEvent.class, name = "response.file_search_call.in_progress"),
  @JsonSubTypes.Type(value = ResponseFileSearchCallSearchingEvent.class, name = "response.file_search_call.searching"),
  @JsonSubTypes.Type(value = ResponseFunctionCallArgumentsDeltaEvent.class, name = "response.function_call_arguments.delta"),
  @JsonSubTypes.Type(value = ResponseFunctionCallArgumentsDoneEvent.class, name = "response.function_call_arguments.done"),
  @JsonSubTypes.Type(value = ResponseInProgressEvent.class, name = "response.in_progress"),
  @JsonSubTypes.Type(value = ResponseFailedEvent.class, name = "response.failed"),
  @JsonSubTypes.Type(value = ResponseIncompleteEvent.class, name = "response.incomplete"),
  @JsonSubTypes.Type(value = ResponseOutputItemAddedEvent.class, name = "response.output_item.added"),
  @JsonSubTypes.Type(value = ResponseOutputItemDoneEvent.class, name = "response.output_item.done"),
  @JsonSubTypes.Type(value = ResponseRefusalDeltaEvent.class, name = "response.refusal.delta"),
  @JsonSubTypes.Type(value = ResponseRefusalDoneEvent.class, name = "response.refusal.done"),
  @JsonSubTypes.Type(value = ResponseTextAnnotationDeltaEvent.class, name = "response.output_text.annotation.added"),
  @JsonSubTypes.Type(value = ResponseTextDeltaEvent.class, name = "response.output_text.delta"),
  @JsonSubTypes.Type(value = ResponseTextDoneEvent.class, name = "response.output_text.done"),
  @JsonSubTypes.Type(value = ResponseWebSearchCallCompletedEvent.class, name = "response.web_search_call.completed"),
  @JsonSubTypes.Type(value = ResponseWebSearchCallInProgressEvent.class, name = "response.web_search_call.in_progress"),
  @JsonSubTypes.Type(value = ResponseWebSearchCallSearchingEvent.class, name = "response.web_search_call.searching")
})
public interface ResponseStreamEvent {

}
