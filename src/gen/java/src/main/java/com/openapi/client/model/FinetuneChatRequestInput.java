/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.openapi.client.model.ChatCompletionFunctions;
import com.openapi.client.model.ChatCompletionTool;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * The per-line training example of a fine-tuning input file for chat models
 */
@Schema(description = "The per-line training example of a fine-tuning input file for chat models")


public class FinetuneChatRequestInput {
  @JsonProperty("messages")
  private List<OneOfFinetuneChatRequestInputMessagesItems> messages = null;

  @JsonProperty("tools")
  private List<ChatCompletionTool> tools = null;

  @JsonProperty("parallel_tool_calls")
  private Boolean parallelToolCalls = null;

  @JsonProperty("functions")
  private List<ChatCompletionFunctions> functions = null;

  public FinetuneChatRequestInput messages(List<OneOfFinetuneChatRequestInputMessagesItems> messages) {
    this.messages = messages;
    return this;
  }

  public FinetuneChatRequestInput addMessagesItem(OneOfFinetuneChatRequestInputMessagesItems messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<OneOfFinetuneChatRequestInputMessagesItems>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @Schema(description = "")
  public List<OneOfFinetuneChatRequestInputMessagesItems> getMessages() {
    return messages;
  }

  public void setMessages(List<OneOfFinetuneChatRequestInputMessagesItems> messages) {
    this.messages = messages;
  }

  public FinetuneChatRequestInput tools(List<ChatCompletionTool> tools) {
    this.tools = tools;
    return this;
  }

  public FinetuneChatRequestInput addToolsItem(ChatCompletionTool toolsItem) {
    if (this.tools == null) {
      this.tools = new ArrayList<ChatCompletionTool>();
    }
    this.tools.add(toolsItem);
    return this;
  }

   /**
   * A list of tools the model may generate JSON inputs for.
   * @return tools
  **/
  @Schema(description = "A list of tools the model may generate JSON inputs for.")
  public List<ChatCompletionTool> getTools() {
    return tools;
  }

  public void setTools(List<ChatCompletionTool> tools) {
    this.tools = tools;
  }

  public FinetuneChatRequestInput parallelToolCalls(Boolean parallelToolCalls) {
    this.parallelToolCalls = parallelToolCalls;
    return this;
  }

   /**
   * Get parallelToolCalls
   * @return parallelToolCalls
  **/
  @Schema(description = "")
  public Boolean getParallelToolCalls() {
    return parallelToolCalls;
  }

  public void setParallelToolCalls(Boolean parallelToolCalls) {
    this.parallelToolCalls = parallelToolCalls;
  }

  public FinetuneChatRequestInput functions(List<ChatCompletionFunctions> functions) {
    this.functions = functions;
    return this;
  }

  public FinetuneChatRequestInput addFunctionsItem(ChatCompletionFunctions functionsItem) {
    if (this.functions == null) {
      this.functions = new ArrayList<ChatCompletionFunctions>();
    }
    this.functions.add(functionsItem);
    return this;
  }

   /**
   * A list of functions the model may generate JSON inputs for.
   * @return functions
  **/
  @Schema(description = "A list of functions the model may generate JSON inputs for.")
  public List<ChatCompletionFunctions> getFunctions() {
    return functions;
  }

  public void setFunctions(List<ChatCompletionFunctions> functions) {
    this.functions = functions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinetuneChatRequestInput finetuneChatRequestInput = (FinetuneChatRequestInput) o;
    return Objects.equals(this.messages, finetuneChatRequestInput.messages) &&
        Objects.equals(this.tools, finetuneChatRequestInput.tools) &&
        Objects.equals(this.parallelToolCalls, finetuneChatRequestInput.parallelToolCalls) &&
        Objects.equals(this.functions, finetuneChatRequestInput.functions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messages, tools, parallelToolCalls, functions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinetuneChatRequestInput {\n");
    
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    tools: ").append(toIndentedString(tools)).append("\n");
    sb.append("    parallelToolCalls: ").append(toIndentedString(parallelToolCalls)).append("\n");
    sb.append("    functions: ").append(toIndentedString(functions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
